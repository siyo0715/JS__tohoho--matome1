///////////////
オブジェクトとは
///////////////
Object は、Number, String, Boolean, Date などのオブジェクトの親(祖先)となるオブジェクトで、
Object が持つメソッドやプロパティは、すべての子孫オブジェクトで使用可能です。
_____________________________________________________________________________________


//////////////////////////////////////////////////////////////////////////////
ECMAScript でサポートされた書き方で、最近ではほとんどの場合、この書き方を用います。
//////////////////////////////////////////////////////////////////////////////

var obj = {};
_____________________________________________________________________________________

///////////////////////////////////////////////////////////////////////
プロトタイプは、子オブジェクトやサブクラスに継承されるプロパティやメソッドの集合です。
///////////////////////////////////////////////////////////////////////

Object.prototype
/////////////////////////////////////////////////////
オブジェクトのプロトタイプを示します。
このオブジェクトタイプに新しいプロパティを定義したり、
継承するメソッドをオーバライドしたりする際に用いられます。
//////////////////////////////////////////////////////


プロパティ記述子
Object.defineProperty(obj, property, descriptor)

obj のプロパティ値、および、プロパティ記述子を設定・変更します。
obj にはオブジェクト、prop にはプロパティ名または Symbol、description にプロパティ記述子を指定します。
プロパティ記述子には下記の属性を指定します。

value にはプロパティの値を指定します。
省略した場合は undefined となります。get, set と同時に指定することはできません。

///////////////////////////////////////////////////////////////////////////
Object.defineProperties(obj, properties)
複数のプロパティを同時に指定します。
/////////////////////////////////////////////////////////////////////////////
Object.getOwnPropertyDescriptor(obj, prop)

指定したオブジェクトのプロパティの、プロパティ記述子を取得します。
//////////////////////////////////////////////////////////////////////////////////////

// 文字列への変換

////////////////object.toString()////////////////////////////////////////////////////
// オブジェクトを文字列に変換する際に用いられます。
// オブジェクトの種類や JavaScript のバージョンによって文字列のフォーマットは異なります。
// このメソッドは、オブジェクトを文字列に変換する必要がある時に暗黙的に呼ばれます
/////////////////////////////////////////////////////////////////////////////////////
// obj.toLocaleString()
// オブジェクトを文字列に変換します。
// Object では toLocaleString() は toString() と同等ですが、
// Date などのサブクラスでは、toLocaleString() をオーバーライドすることで、
// 言語依存の文字列に変換することができます。
//////////////////////////////////////////////////////////////////////////////////////
// obj.constructor
// オブジェクトのコンストラクタへの参照を返します。

////////////////////////////////////////////////////////////////////////////////////////
クラスを定義する
ES2015(ES6) より古い JavaScript では class による クラス 定義がサポートされておらず、
代わりに function を用いてクラスを擬似的に定義していました。
下記では、Person というクラスを定義しています。
これは name と age を属性（プロパティ）として持ち、toString() を動作（メソッド）として持ちます。
toString() は、すべてのクラスに共通な toString() メソッドを上書き（オーバーライド）するものです。
////////////////////////////////////////////////////////////////////////////////////////